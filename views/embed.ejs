<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UniTalk Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        /* Seluruh layar */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        /* Container utama */
        .chat-container {
            width: 100vw;
            height: 100vh;
            display: flex;
            flex-direction: column;
            background: #f8f9fa;
        }

        /* Header */
        .chat-header {
            background: #007bff;
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* Sidebar daftar chat */
        .chat-main {
            display: flex;
            flex: 1;
            overflow: hidden;
        }

        .chat-list {
            width: 80px;
            background: #343a40;
            padding: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        .chat-list button {
            background: transparent;
            border: none;
            color: white;
            cursor: pointer;
            font-size: 20px;
        }

        /* Area pesan */
        .chat-box {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
        }

        .message {
            padding: 10px 15px;
            border-radius: 10px;
            margin: 5px;
            max-width: 70%;
            word-wrap: break-word;
        }

        .message.user {
            background: #007bff;
            color: white;
            align-self: flex-end;
        }

        .message.other {
            background: #e9ecef;
            color: black;
            align-self: flex-start;
        }

        /* Input */
        .chat-footer {
            display: flex;
            padding: 15px;
            border-top: 1px solid #ccc;
            background: white;
        }

        .chat-footer input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }

        .chat-footer button {
            padding: 10px 15px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

    </style>
</head>
<body>

    <div class="chat-container">
        <div class="chat-header">
            UniTalk Chat
        </div>

        <div class="chat-main">
            <div class="chat-list" id="chatList">
                <!-- Sidebar daftar chat -->
            </div>

            <div class="chat-box" id="chatBox">
                <p class="message other">Pilih chat untuk memulai obrolan</p>
            </div>
        </div>

        <div class="chat-footer">
            <input type="text" id="messageInput" placeholder="Ketik pesan...">
            <button id="sendButton">Kirim</button>
        </div>
    </div>

    <script>
        let socket;
        let currentUserId = 1; // Gantilah dengan ID user yang sedang login
        let selectedChatId = null;

        function connectWebSocket() {
            socket = new WebSocket("ws://localhost:5000");

            socket.onopen = () => console.log("Terhubung ke WebSocket");

            socket.onmessage = (event) => {
                const data = JSON.parse(event.data);
                if (data.type === "newMessage" && data.id_receiver === selectedChatId) {
                    addMessage(data.pesan, data.id_sender === currentUserId ? "user" : "other");
                }
            };

            socket.onerror = (error) => console.error("WebSocket Error:", error);

            socket.onclose = () => {
                console.warn("WebSocket terputus, mencoba kembali dalam 5 detik...");
                setTimeout(connectWebSocket, 5000);
            };
        }

        connectWebSocket();

        function selectChat(chatId) {
            selectedChatId = chatId;
            document.getElementById("chatBox").innerHTML = `<p class="message other">Memulai obrolan dengan ${chatId}</p>`;
        }

        document.getElementById("sendButton").addEventListener("click", () => {
            const messageInput = document.getElementById("messageInput");
            const pesan = messageInput.value.trim();

            if (pesan && selectedChatId) {
                socket.send(JSON.stringify({ 
                    type: "sendMessage", 
                    pesan,
                    id_sender: currentUserId,
                    id_receiver: selectedChatId
                }));

                addMessage(pesan, "user");
                messageInput.value = "";
            }
        });

        function addMessage(pesan, sender) {
            const chatBox = document.getElementById("chatBox");
            const messageElement = document.createElement("p");
            messageElement.classList.add("message", sender);
            messageElement.textContent = pesan;
            chatBox.appendChild(messageElement);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        function generateChatList() {
            const chatList = document.getElementById("chatList");
            chatList.innerHTML = "";
            const users = [{ id: 2, name: "Zaki" }, { id: 3, name: "Alya" }];
            
            users.forEach(user => {
                const button = document.createElement("button");
                button.innerHTML = `<i class="fa-solid fa-user"><span class="ps-2">${user.name}</span></i>`;
                button.onclick = () => selectChat(user.id);
                chatList.appendChild(button);
            });
        }

        generateChatList();
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
